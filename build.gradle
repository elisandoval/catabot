import jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask

buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.4"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.5.RELEASE"
        classpath "de.sebastianboegl.gradle.plugins:shadow-log4j-transformer:2.1.1"
        classpath "jp.classmethod.aws:gradle-aws-plugin:0.38"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.31"
    }
}

version "0.1"
group "catabot"

apply plugin: "io.spring.dependency-management"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"
apply plugin: "de.sebastianboegl.shadow.transformer.log4j"
apply plugin: "jp.classmethod.aws.lambda"
apply plugin: "kotlin"
apply plugin: "kotlin-kapt"


repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

dependencyManagement {
    imports {
        mavenBom "io.micronaut:bom:1.0.0.M4"
    }
}

dependencies {
    compile "io.micronaut:function-aws"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.31"
    compile "org.jetbrains.kotlin:kotlin-reflect:1.2.31"
    compile "io.micronaut:runtime"
    compile "com.github.kittinunf.fuel:fuel:1.15.0"
    compile "com.github.kittinunf.fuel:fuel-coroutines:1.15.0"
    compile "com.google.code.gson:gson:2.8.5"
    compile "org.kohsuke:github-api:1.94"
    compile "io.github.microutils:kotlin-logging:1.6.10"
    kapt "io.micronaut:inject-java"
    kaptTest "io.micronaut:inject-java"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    runtime "com.amazonaws:aws-lambda-java-log4j2:1.0.0"
    runtime "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.4.1"
    testImplementation "io.mockk:mockk:1.8.7"
    testCompile "io.micronaut:function-client"
    testCompile "io.micronaut:http-client"
    testCompile "org.junit.jupiter:junit-jupiter-api:5.1.0"
    testCompile "org.jetbrains.spek:spek-api:1.1.5"
    testRuntime "io.micronaut:http-server-netty"
    testRuntime "io.micronaut:function-web"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:5.1.0"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:1.1.5"
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs("-noverify", "-XX:TieredStopAtLevel=1")
mainClassName = "io.micronaut.function.executor.FunctionApplication"
applicationDefaultJvmArgs = [""]

jar {
    manifest {
        attributes "Main-Class": mainClassName
    }
}

if (new File("${System.getProperty("user.home")}/.aws/credentials").exists()) {
    task deploy(type: AWSLambdaMigrateFunctionTask, dependsOn: shadowJar) {
        functionName = "catabot"
        handler = "io.micronaut.function.aws.MicronautRequestStreamHandler"
        role = "arn:aws:iam::${aws.accountId}:role/lambda_basic_execution"
        runtime = com.amazonaws.services.lambda.model.Runtime.Java8
        zipFile = shadowJar.archivePath
        memorySize = 256
        timeout = 100
    }
}


test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        //Will retain parameter names for Java reflection
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        javaParameters = true
    }
}
